version: '3.8'

services:
  #database    

  #orderdb: sql server
  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "Admin@123"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - sqlserver_data:/var/lib/sqlserver/data
    ports:
      - "1435:1433"
  
  #productdb: mysql
  productdb:
    container_name: productdb
    environment:
      MYSQL_ROOT_PASSWORD: "Admin@123"
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3308:3306"
  
  #customerdb: postgres
  customerdb:
    container_name: customerdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=CustomerDb
    restart: always
    volumes:
      - postgres_data:/var/lib/postgressql/data
    ports:
      - "5435:5432"

  #basketdb: redis
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"

  #inventory: mongo
  inventorydb:
    container_name: inventorydb
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
  
  #infrastructure

  #rabbitmq
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  #pgadmin: postgres admin
  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    volumes:
      - pgadmin_data:/root/.pgadmin
    ports:
      - "5050:80"

  #portainer
  portainer:
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "8100:8080"
      - "9000:9000"

  #elasticsearch
  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  #kibana
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  #microservices
  product.api:
    container_name: product.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "ConnectionStrings:DefaultConnectionString=Server=host.docker.internal;Port=3308;Database=ProductDB;Uid=root;Pwd=Admin@123;"
    depends_on:
      - productdb
    ports:
      - "7002:80"
    restart: always
  
  customer.api:
    container_name: customer.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "ConnectionStrings:DefaultConnectionString=Server=host.docker.internal;Port=5435;Database=CustomerDb;User Id=admin;Password=admin1234"
    depends_on:
      - customerdb
    ports:
      - "7003:80"
    restart: always

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "CacheSettings:ConnectionString=host.docker.internal:6379"
    depends_on:
      - basketdb
    ports:
      - "7004:80"
    restart: always
   
